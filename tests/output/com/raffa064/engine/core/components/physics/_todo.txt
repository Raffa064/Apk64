import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Pixmap;
import com.badlogic.gdx.graphics.Pixmap.Format;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

public class Main extends ApplicationAdapter {
    private SpriteBatch batch;
    private TextureRegion textureRegion;

    @Override
    public void create() {
        batch = new SpriteBatch();

        // Chame a função para criar o pixmap e desenhar o quadrado com círculos
        Pixmap pixmap = createPixmapWithSquareAndCircles(200, 200);
        textureRegion = new TextureRegion(new Texture(pixmap));
        pixmap.dispose();
    }

    @Override
    public void render() {
        Gdx.gl.glClearColor(0, 0, 0, 1);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);

        batch.begin();
        batch.draw(textureRegion, 0, 0);
        batch.end();
    }

    @Override
    public void dispose() {
        batch.dispose();
        textureRegion.getTexture().dispose();
    }

    private Pixmap createPixmapWithSquareAndCircles(int width, int height) {
        Pixmap pixmap = new Pixmap(width, height, Format.RGBA8888);
        pixmap.setColor(1, 1, 1, 1); // Cor branca

        // Desenhe um quadrado
        pixmap.fillRectangle(50, 50, width - 100, height - 100);

        // Desenhe círculos nos cantos
        pixmap.setColor(1, 0, 0, 1); // Cor vermelha
        pixmap.fillCircle(25, 25, 25); // Canto superior esquerdo
        pixmap.fillCircle(width - 25, 25, 25); // Canto superior direito
        pixmap.fillCircle(25, height - 25, 25); // Canto inferior esquerdo
        pixmap.fillCircle(width - 25, height - 25, 25); // Canto inferior direito

        return pixmap;
    }
}

